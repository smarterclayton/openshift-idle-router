#!/bin/sh
cat <<DOC >/dev/null

A script for demonstrating and perf testing a two tier routing architecture:

  HAProxy (serving high traffic backends)
  oo-idle-router in Go (serving backends that may be idled or low traffic)

  HAProxy
    -> high traffic backend 1
    -> high traffic backend 2
    -> high traffic backend 3
    -> ...
    -> high traffic backend N

    -> fallthrough to oo-idle-router

    oo-idle-router
      keeps a map of hosts -> gears
      able to invoke a command to activate a gear if it is idled
      able to route HTTP traffic at reasonably high rates

      -> proxy to idle backend 1
      -> proxy to low-activity backend 2

DOC

killall 'testserver'
killall 'oo-idle-router'

set -e
GOPATH=$(readlink -f ./go)
go build testserver
go build oo-idle-router

TESTSERVER_PATH=$(readlink -f ./testserver)
HOST=127.0.0.1
PORT=22001 ./testserver & pid_1=$!
PORT=22002 ./testserver & pid_2=$!
GOMAXPROCS=2 PORT=22003 ./testserver & pid_3=$!
GOGCTRACE=1 GOMAXPROCS=2 PORT=21999 ./oo-idle-router -activate=$TESTSERVER_PATH-runner & pid_4=$!

echo TRY: curl http://localhost:22000 -H "Host: port22001.rhcloud.com"
echo TRY: curl http://localhost:22000 -H "Host: port22002.rhcloud.com"
echo TRY: curl http://localhost:22000 -H "Host: port22003.rhcloud.com"

trap ctrl_c INT
function ctrl_c() {
  echo ' stopping children'
}

../haproxy-1.5-dev19/haproxy -f haproxy.cfg

kill $pid_1 $pid_2 $pid_3 $pid_4